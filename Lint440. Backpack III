class Solution {
public:

    int backPackIII(vector<int> &A, vector<int> &V, int m) {
        int n = A.size();
        vector<int> dp(m+1, 0);
        // dp[i][j], using  item [0, i], size limit is j, the maximum value we can have
        // dp[i][j] = max(dp[i-1][j]ï¼Œdp[i-1][j - A[i]] + V[i];

        for(int i = 0; i < n; i++){
            for(int j = 1; j <= m; j++){ // from small to big
                if(j - A[i] >= 0){
                    dp[j] = max(dp[j], dp[j - A[i]] + V[i]);
                }
            }
        }
        return dp[m];
    }
};

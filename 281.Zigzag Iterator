class ZigzagIterator {

private:
	vector<int> :: iterator begin[2], end[2];
	int index = 0;

public:
    /*
    * @param v1: A 1d vector
    * @param v2: A 1d vector
    */ZigzagIterator(vector<int>& v1, vector<int>& v2) {
		begin[0] = v1.begin();
		begin[1] = v2.begin();
		end[0] = v1.end();
		end[1] = v2.end();
    }

    /*
     * @return: An integer
     */
    int next() {
    	int res;
    	if(begin[0] == end[0]){
    		res = *begin[1]++;
    	}
    	else if(begin[1] == end[1]){
    		res = *begin[0]++;
    	}
    	else{
    		res = *begin[index]++;
    		index = (index+1)%2;
   		}
   		return res;
    }

    /*
     * @return: True if has next
     */
    bool hasNext() {
    	return begin[0] != end[0] || begin[1] != end[1];
    }
};


